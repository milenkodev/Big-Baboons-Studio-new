---
export interface Props {
  url?: string;
  classes?: string;
  target?: "_blank" | "_self" | "_parent" | "_top";
  text?: string;
  currentPath?: string;
}

const { url, classes = "", target, currentPath = "" } = Astro.props;
const isActive = url === currentPath;
const activeClass = isActive ? "underline" : "";

---

<a href={url} target={target} class={`group footer-text focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2 rounded-xl ${classes} ${activeClass} `.trim()}>
  <slot />
</a>

<style >
  .cta {
    @apply relative  block px-6 py-4 border-2 h-fit text-lg border-black bg-accent rounded-lg font-atk font-bold text-white hover:translate-y-1 transition-all duration-200 shadow-[0px_4px_0px_0px_rgba(28,28,28)] hover:shadow-[0px_0px_0px_0px_rgba(28,28,28)] ;
  }
  .default {
    @apply relative block px-1 py-1 font-atk font-normal underline duration-500 pointer-events-auto ;
  }
  .email {
    @apply relative inline-block  font-atk font-normal underline pointer-events-auto;
    font-size: clamp(1.5rem, 1.4rem + 0.5vw, 4rem);
  }

  .nav-link{
    @apply text-[clamp(2rem,_0.85rem_+_5.75vw,_7.75rem)] font-prompt uppercase hover:underline hover:opacity-100 duration-500 pointer-events-auto;
}

.project-titles{
    font-size: clamp(2rem, 0.85rem + 5.75vw, 7.75rem);
    @apply text-center uppercase font-prompt underline absolute inset-0 rounded-3xl focus-visible:ring-0 focus-visible:ring-white flex justify-center items-center px-6 md:px-24 ;
  }
</style>
